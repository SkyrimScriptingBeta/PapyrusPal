[project]
name = "skyrim_mod_maker"
version = "0.0.1"
description = "Your friend for Skyrim script authoring!"
authors = [{ name = "Mrowr Purr", email = "mrowr.purr@gmail.com" }]
license = { text = "0BSD" }
readme = "README.md"
requires-python = "<3.14,>=3.12"
dependencies = [
  "pyside6 (>=6.9.0,<7.0.0)",
  "qasync (>=0.27.1,<0.28.0)",
  "python-dotenv (>=1.1.0,<2.0.0)",
  "pylspclient (>=0.1.2,<0.2.0)",
]

[tool.poetry.scripts]
app = "skyrim_mod_maker.app.__main__:main"

[tool.poe.tasks]
dev = "poetry run app --dev"
dev-light = "poetry run app --dev --light"
dev-dark = "poetry run app --dev --dark"
prod = "poetry run app"
prod-light = "poetry run app --light"
prod-dark = "poetry run app --dark"
qrc = "pyside6-rcc -o src/skyrim_mod_maker/app/qrc_resources.py resources/resources.qrc"
exe = "pyinstaller --onefile --windowed --noconfirm --name \"Papyrus Pad\" --icon resources/images/icon.ico src/skyrim_mod_maker/app/__main__.py"
exe-dir = "pyinstaller --onedir --windowed --noconfirm --name \"Papyrus Pad\" --icon resources/images/icon.ico src/skyrim_mod_maker/app/__main__.py"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.33.1"
libsass = "^0.23.0"
pyinstaller = "^6.12.0"
python-lsp-server = { extras = ["all"], version = "^1.12.2" }

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
typeCheckingMode = "strict"

# Extra strictness not included in "strict":
reportCallInDefaultInitializer = true
reportImplicitOverride = true
reportImplicitStringConcatenation = true
reportImportCycles = true
reportMissingSuperCall = true
reportPropertyTypeMismatch = true
reportShadowedImports = true
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedCallResult = false

strictListInference = true
strictDictionaryInference = true
strictSetInference = true

# Qt signal-slot connection handling
reportGeneralTypeIssues = "warning" # Downgrade from error to warning for signal-slot connections
reportFunctionMemberAccess = "warning" # Helps with signal emissions
reportOptionalSubscript = false # For handling Qt's complex signal parameter types
reportOptionalMemberAccess = false # For signal access patterns
reportOptionalCall = false # For signal connections with varying parameters

# reportCallInDefaultInitializer = false # Because Qt super() and stuff

# Optional but often good:
exclude = ["**/__pycache__", "**/.venv", "**/venv", "**/.mypy_cache"]
