[project]
name = "papyrus-pal"
version = "0.0.1"
description = "Your friend for Skyrim script authoring!"
authors = [{ name = "Mrowr Purr", email = "mrowr.purr@gmail.com" }]
license = { text = "0BSD" }
readme = "README.md"
requires-python = "<3.14,>=3.9"
dependencies = [
  "pyside6 (>=6.9.0,<7.0.0)",
  "qasync (>=0.27.1,<0.28.0)",
  "python-dotenv (>=1.1.0,<2.0.0)",
]

[tool.poetry.scripts]
app = "papyrus_pal.__main__:main"
text_editor_for_lsp = "example_apps.text_editor_for_lsp.app:main"

[tool.poe.tasks]
dev = "poetry run app --dev"
dev-light = "poetry run app --dev --light"
dev-dark = "poetry run app --dev --dark"
prod = "poetry run app"
prod-light = "poetry run app --light"
prod-dark = "poetry run app --dark"
qrc = "pyside6-rcc -o src/papyrus_pal/qrc_resources.py resources/resources.qrc"
exe = "pyinstaller --onefile --windowed --noconfirm --name \"Papyrus Pal\" --icon resources/images/icon.ico src/papyrus_pal/__main__.py"
exe-dir = "pyinstaller --onedir --windowed --noconfirm --name \"Papyrus Pal\" --icon resources/images/icon.ico src/papyrus_pal/__main__.py"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.33.1"
libsass = "^0.23.0"
pyinstaller = "^6.12.0"

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
typeCheckingMode = "strict"

# Extra strictness not included in "strict":
reportCallInDefaultInitializer = true
reportImplicitOverride = true
reportImplicitStringConcatenation = true
reportImportCycles = true
reportMissingSuperCall = true
reportPropertyTypeMismatch = true
reportShadowedImports = true
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedCallResult = false

strictListInference = true
strictDictionaryInference = true
strictSetInference = true

# Optional but often good:
exclude = ["**/__pycache__", "**/.venv", "**/venv", "**/.mypy_cache"]
